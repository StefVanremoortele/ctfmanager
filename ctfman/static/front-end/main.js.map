{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blog_post.service.ts","webpack:///./src/app/capture-the-flag/capture-the-flag.component.html","webpack:///./src/app/capture-the-flag/capture-the-flag.component.scss","webpack:///./src/app/capture-the-flag/capture-the-flag.component.ts","webpack:///./src/app/capture-the-flag/create-ctf/create-ctf.component.html","webpack:///./src/app/capture-the-flag/create-ctf/create-ctf.component.scss","webpack:///./src/app/capture-the-flag/create-ctf/create-ctf.component.ts","webpack:///./src/app/capture-the-flag/ctf.service.ts","webpack:///./src/app/capture-the-flag/edit-ctf/edit-ctf.component.html","webpack:///./src/app/capture-the-flag/edit-ctf/edit-ctf.component.scss","webpack:///./src/app/capture-the-flag/edit-ctf/edit-ctf.component.ts","webpack:///./src/app/capture-the-flag/index.ts","webpack:///./src/app/challenges/challenges.component.html","webpack:///./src/app/challenges/challenges.component.scss","webpack:///./src/app/challenges/challenges.component.ts","webpack:///./src/app/challenges/index.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/core/logger.service.ts","webpack:///./src/app/core/module-import.guard.ts","webpack:///./src/app/core/not-found/index.ts","webpack:///./src/app/core/not-found/not-found.component.html","webpack:///./src/app/core/not-found/not-found.component.scss","webpack:///./src/app/core/not-found/not-found.component.ts","webpack:///./src/app/core/unauthorized/index.ts","webpack:///./src/app/core/unauthorized/unauthorized.component.html","webpack:///./src/app/core/unauthorized/unauthorized.component.scss","webpack:///./src/app/core/unauthorized/unauthorized.component.ts","webpack:///./src/app/core/write-out-json-intercepter.ts","webpack:///./src/app/index.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UnauthorizedComponent, NotFoundComponent } from '.';\nimport { CaptureTheFlagComponent } from './capture-the-flag';\nimport { ChallengesComponent } from \"./challenges\";\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '', pathMatch: 'full' },\n\n  { path: 'CTF', component: CaptureTheFlagComponent },\n  { path: 'challenges', component: ChallengesComponent },\n  { path: 'unauthorized', component: UnauthorizedComponent },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes)]\n})\nexport class AppRoutingModule {}\n// export const routing = RouterModule.forRoot(routes);\n\n\n// // import { NgModule } from '@angular/core';\n// // import { RouterModule, Routes } from '@angular/router';\n\n// // // import { AuthService AuthGuardService } from './shared';\n\n\n// import { NgModule }             from '@angular/core';\n// import { RouterModule, Routes } from '@angular/router';\n// import { NotFoundComponent, UnauthorizedComponent } from './core';\n\n\n\n// // export const authProviders = [\n// // //   AuthService,\n// // //   AuthGuardService\n// // ];\n\n// @NgModule({\n//   exports: [ RouterModule ],s\n//   imports: [ RouterModule.forRoot(routes) ]\n  \n// })\n// export class AppRoutingModule {}","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <!-- Logged out view -->\\n  <div *ngIf=\\\"!_userService.token\\\">\\n    <h2>Welcome to CTFMAN</h2>\\n    <h3>Please log in</h3>\\n    <div>\\n      <div class=\\\"col-sm-4\\\">\\n        <label>Username:</label><br />\\n        <input type=\\\"text\\\" name=\\\"login-username\\\" [(ngModel)]=\\\"user.username\\\">\\n        <span *ngFor=\\\"let error of _userService.errors.username\\\"><br />{{ error }}</span></div>\\n      <div class=\\\"col-sm-4\\\">\\n        <label>Password:</label><br />\\n        <input type=\\\"password\\\" name=\\\"login-password\\\" [(ngModel)]=\\\"user.password\\\">\\n        <span *ngFor=\\\"let error of _userService.errors.password\\\"><br />{{ error }}</span>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <button (click)=\\\"login()\\\" class=\\\"btn btn-primary\\\">Log In</button>&nbsp;\\n      </div>\\n    </div>\\n    <h2>or register</h2>\\n    <div class=\\\"col-sm-4\\\">\\n      <label>Username:</label><br />\\n      <input type=\\\"text\\\" name=\\\"register-username\\\" [(ngModel)]=\\\"newUser.username\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <label>Email:</label><br />\\n      <input type=\\\"text\\\" name=\\\"register-email\\\" [(ngModel)]=\\\"newUser.email\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <label>Password:</label><br />\\n      <input type=\\\"password\\\" name=\\\"register-password\\\" [(ngModel)]=\\\"newUser.password\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <button (click)=\\\"register()\\\" class=\\\"btn btn-primary\\\">Register</button>&nbsp;\\n    </div>\\n  </div>\\n\\n\\n  <!-- Logged in view -->\\n  <div *ngIf=\\\"_userService.token\\\">\\n        <div class=\\\"float-right\\\">Hi, {{ _userService.username }}.<br />\\n          <button (click)=\\\"logout()\\\" class=\\\"btn btn-primary pull-right\\\">Log out</button>&nbsp;\\n        </div>\\n      <div class=\\\"col-sm-10\\\">\\n        <nav>\\n          <h3>Menu</h3>\\n          <ul>\\n            <li><a routerLink=\\\"CTF\\\">View CTFs</a></li>\\n            <li><a routerLink=\\\"challenges\\\">View Challenges</a></li>\\n            <li><a routerLink=\\\"abc123Jibberish\\\">Go to a page that doesn't work</a></li>\\n          </ul>\\n        </nav>\\n        <hr>\\n        <router-outlet></router-outlet>\\n      </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- \\n    \\n    <div class=\\\"row\\\" *ngIf=\\\"!_userService.token\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <label>Username:</label><br />\\n        <input type=\\\"text\\\" name=\\\"login-username\\\" [(ngModel)]=\\\"user.username\\\">\\n        <span *ngFor=\\\"let error of _userService.errors.username\\\"><br />{{ error }}</span></div>\\n        <div class=\\\"col-sm-4\\\">\\n          <label>Password:</label><br />\\n          <input type=\\\"password\\\" name=\\\"login-password\\\" [(ngModel)]=\\\"user.password\\\">\\n          <span *ngFor=\\\"let error of _userService.errors.password\\\"><br />{{ error }}</span>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n          <button (click)=\\\"login()\\\" class=\\\"btn btn-primary\\\">Log In</button>&nbsp;\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.non_field_errors\\\">{{ error }}<br /></span>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"_userService.token\\\">\\n  <div class=\\\"col-sm-12\\\">You are logged in as {{ _userService.username }}.<br />\\n    Token Expires: {{ _userService.token_expires }}<br />\\n    <button (click)=\\\"refreshToken()\\\" class=\\\"btn btn-primary\\\">Refresh Token</button>&nbsp;\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-primary\\\">Log Out</button>&nbsp;\\n  </div>\\n</div> -->\\n<!-- \\n<h2 class=\\\"mt-3\\\">Micro Blog Posts</h2>\\n<div *ngFor=\\\"let post of posts\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <label class=\\\"col-md-2\\\">By:</label>\\n    <div class=\\\"col-md-2 mb-1\\\">{{ post.user }}</div>\\n    <label class=\\\"col-md-2\\\">Date:</label>\\n    <div class=\\\"col-md-6\\\">{{ post.date }}</div>\\n    <div class=\\\"col-md-12\\\">{{ post.body }}</div>\\n  </div>\\n</div>\\n\\n<h3>Create a new post:</h3>\\n\\n<div class=\\\"row mb-1\\\">\\n  <label class=\\\"col-md-3\\\">Enter your post:</label>\\n  <div class=\\\"col-md-9 mb-1\\\"><input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"new_post.body\\\"></div>\\n  <div class=\\\"col-md-2 offset-3\\\">\\n    <button (click)=\\\"createPost()\\\" class=\\\"btn btn-primary\\\">Save</button>\\n  </div>\\n</div> -->\\n\\n<!-- \\n\\n<h3>Register new user</h3>\\n\\n  <div>\\n    <label for=\\\"user-name\\\">username</label>\\n    <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"newUser.username\\\">\\n\\n    <label for=\\\"email\\\">email</label>\\n    <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"newUser.email\\\">\\n\\n\\n    <label for=\\\"password\\\">password</label>\\n    <input type=\\\"text\\\" name=\\\"password\\\" [(ngModel)]=\\\"newUser.password\\\">\\n\\n    <div class=\\\"col-md-2 offset-3\\\">\\n      <button (click)=\\\"register()\\\" class=\\\"btn btn-primary\\\">Register </button>\\n    </div>\\n\\n  </div> -->\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {BlogPostService} from './blog_post.service';\nimport {UserService} from './user.service';\nimport {throwError} from 'rxjs';  // Angular 6/RxJS 6\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n   * An object representing the user for the login form\n   */\n  public user: any;\n  public newUser: any;\n\n  /**\n   * An array of all the BlogPost objects from the API\n   */\n  public posts;\n\n  /**\n   * An object representing the data in the \"add\" form\n   */\n  public new_post: any;\n\n  constructor(private _blogPostService: BlogPostService, private _userService: UserService) { }\n\n  ngOnInit() {\n    // check if  user has token in localstorage\n    // if he doess, make sure he doesn't need to log in\n    \n    this._userService.isLoggedIn()\n\n\n    this.getPosts();\n    this.new_post = {};\n    this.user = {\n      username: '',\n      password: ''\n    };\n    this.newUser = {\n      username: '',\n      email: '',\n      password: '',\n    };\n  }\n\n\n  login() {\n    this._userService.login({'username': this.user.username, 'password': this.user.password});\n  }\n\n  register() {\n    console.log(\"registering...\")\n    // this._userService.register({'username': this.newUser.username, 'email': this.newUser.email, 'password': this.newUser.password}, this.user.token);\n    this._userService.register({'username': this.newUser.username, 'email': this.newUser.email, 'password': this.newUser.password}).subscribe(\n      data => {\n        // refresh the list\n        console.log(\"Sucessfully registered\")\n        return true;\n\n      },\n      error => {\n        console.error('Error saving!');\n        return throwError(error);\n      }\n   );\n  }\n\n\n  refreshToken() {\n    this._userService.refreshToken();\n  }\n\n  logout() {\n    this._userService.logout();\n  }\n\n  getPosts() {\n    this._blogPostService.list().subscribe(\n      // the first argument is a function which runs on success\n      data => {\n        this.posts = data;\n        // convert the dates to a nice format\n        for (let post of this.posts) {\n          post.date = new Date(post.date);\n        }\n      },\n      // the second argument is a function which runs on error\n      err => console.error(err),\n      // the third argument is a function which runs on completion\n      () => console.log('done loading posts')\n    );\n  }\n\n  createPost() {\n    this._blogPostService.create(this.new_post, this.user.token).subscribe(\n       data => {\n         // refresh the list\n         this.getPosts();\n         return true;\n       },\n       error => {\n         console.error('Error saving!');\n         return throwError(error);\n       }\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ApplicationRef } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n// import { routing } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { BlogPostService } from './blog_post.service';\nimport { UserService } from './user.service';\nimport { CaptureTheFlagComponent } from \"./capture-the-flag\";\nimport { CoreModule } from './core';\nimport { SharedModule } from './shared';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CtfService } from './capture-the-flag/ctf.service';\nimport { ChallengesComponent } from './challenges/challenges.component';\nimport { CreateCtfComponent } from './capture-the-flag/create-ctf/create-ctf.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { EditCtfComponent } from './capture-the-flag/edit-ctf/edit-ctf.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChallengesComponent,\n    CaptureTheFlagComponent,\n    CreateCtfComponent,\n    EditCtfComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpClientModule, CoreModule, SharedModule, RouterModule, AppRoutingModule, NgbModule],\n  providers: [BlogPostService, UserService, CtfService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private _appRef: ApplicationRef) {}\n\n  ngDoBootstrap() {\n    // document.addEventListener('WebComponentsReady', () => {\n    this._appRef.bootstrap(AppComponent);\n    // });\n  }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserService} from './user.service';\n\n@Injectable()\nexport class BlogPostService {\n\n  constructor(private http: HttpClient, private _userService: UserService) {\n  }\n\n  // Uses http.get() to load data from a single API endpoint\n  list() {\n    return this.http.get('/api/posts');\n  }\n\n  // send a POST request to the API to create a new data object\n  create(post, token) {\n    return this.http.post('/api/posts', JSON.stringify(post), this.getHttpOptions());\n  }\n\n  // helper function to build the HTTP headers\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + this._userService.token\n      })\n    };\n  }\n\n}\n","module.exports = \"<h4>CTF's</h4>\\n\\n\\n\\n\\n<div *ngIf=\\\"_ctfService.ctf_list; else emptyCtfList\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div *ngFor=\\\"let ctf of ctf_list\\\">\\n      <div class=\\\"row mb-3\\\">\\n        <p>test</p>\\n        <div class=\\\"col-md-2 mb-1\\\">{{ ctf.id }}</div>\\n        <div class=\\\"col-md-2 mb-1\\\">{{ ctf.title }}</div>\\n        <div class=\\\"col-md-2 mb-1\\\">Start: {{ ctf.startDate }}</div>\\n        <app-edit-ctf></app-edit-ctf>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #emptyCtfList>\\n  <div class=\\\"col-sm-12\\\">\\n    <div>\\n      <p>No CTFs found</p>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<app-create-ctf></app-create-ctf>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { CtfService } from './ctf.service';\nimport { throwError } from 'rxjs/internal/observable/throwError';\n\n@Component({\n  selector: 'app-capture-the-flag',\n  templateUrl: './capture-the-flag.component.html',\n  styleUrls: ['./capture-the-flag.component.scss']\n})\nexport class CaptureTheFlagComponent implements OnInit {\n  public ctf_list: any = [];\n\n  constructor(private _ctfService: CtfService) {\n\n  }\n\n  ngOnInit() {\n    this.getCtfs();\n  }\n\n  getCtfs() {\n    this._ctfService.list().subscribe(\n      data => {\n        this.ctf_list = data;\n      },\n      err => console.error(err),\n      () => console.log('done loading CTFs')\n    );\n  }\n\n  createCtf() {\n    // route to create ctf  page  ||  popup model for creation\n    \n  }\n  \n}\n","module.exports = \"<ng-template #content let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create new ctf</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"ctf-name\\\">CTF name</label>\\n        <div>\\n          <input id=\\\"ctf-name\\\" type=\\\"text\\\">\\n        </div>\\n        <label for=\\\"ctf-type\\\">type</label>\\n        <div>\\n          <input id=\\\"ctf-type\\\" type=\\\"text\\\">\\n        </div>\\n        <label for=\\\"startDate\\\">Start date</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"startDate\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"sdp\\\" ngbDatepicker #sdp=\\\"ngbDatepicker\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"sdp.toggle()\\\" type=\\\"button\\\"></button>\\n          </div>\\n        </div>\\n        <label for=\\\"endDate\\\">End date</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"endDate\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"edp\\\" ngbDatepicker #edp=\\\"ngbDatepicker\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"edp.toggle()\\\" type=\\\"button\\\"></button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close('Save click')\\\">Save</button>\\n  </div>\\n</ng-template>\\n \\n<button class=\\\"btn btn-lg btn-outline-primary\\\" (click)=\\\"open(content)\\\">Create new CTF</button>\\n\\n\\n<pre>{{closeResult}}</pre>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-create-ctf',\n  templateUrl: './create-ctf.component.html',\n  styleUrls: ['./create-ctf.component.scss']\n})\n\nexport class CreateCtfComponent implements OnInit {\n  ngOnInit(): void {\n  }\n  closeResult: string;\n\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  close(reason){\n    this.modalService.dismissAll(reason);\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CtfService {\n\n  public ctf_list: any = [];\n\n  // http options used for making API calls\n  private httpOptions: any;\n\n\n  // error messages received from the login attempt\n  public errors: any = [];\n\n  constructor(private http: HttpClient,  private _userService: UserService) {\n    this.httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n\n    this.ctf_list = this.list();\n\n  }\n\n\n  // Uses http.get() to load data from a single API endpoint\n  list() {\n    return this.http.get('/api/hackathons', this.httpOptions);\n  }\n\n  // send a POST request to the API to create a new data object\n  create(post, token) {\n    return this.http.post('/api/ctfs', JSON.stringify(post), this.getHttpOptions());\n  }\n\n  // helper function to build the HTTP headers\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + this._userService.token\n      })\n    };\n  }\n\n}\n","module.exports = \"<ng-template #content let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Edit ctf</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n\\n        <label for=\\\"ctf-name\\\">CTF name</label>\\n        <div>\\n          <input id=\\\"ctf-name\\\" type=\\\"text\\\">\\n        </div>\\n        <label for=\\\"ctf-type\\\">type</label>\\n        <div>\\n          <input id=\\\"ctf-type\\\" type=\\\"text\\\">\\n        </div>\\n        <label for=\\\"startDate\\\">Start date</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"startDate\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"sdp\\\" ngbDatepicker #sdp=\\\"ngbDatepicker\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"sdp.toggle()\\\" type=\\\"button\\\"></button>\\n          </div>\\n        </div>\\n        <label for=\\\"endDate\\\">End date</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"endDate\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"edp\\\" ngbDatepicker #edp=\\\"ngbDatepicker\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"edp.toggle()\\\" type=\\\"button\\\"></button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close('Save click')\\\">Save</button>\\n  </div>\\n</ng-template>\\n \\n<button class=\\\"btn btn-lg btn-outline-primary\\\" (click)=\\\"open(content)\\\">Edit</button>\\n\\n\\n<pre>{{closeResult}}</pre>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-edit-ctf',\n  templateUrl: './edit-ctf.component.html',\n  styleUrls: ['./edit-ctf.component.scss']\n})\n\nexport class EditCtfComponent implements OnInit {\n  ngOnInit(): void {\n  }\n  closeResult: string;\n\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  close(reason){\n    this.modalService.dismissAll(reason);\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}\n\n","export * from \"./capture-the-flag.component\"","module.exports = \"<p>\\n  challenges works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-challenges',\n  templateUrl: './challenges.component.html',\n  styleUrls: ['./challenges.component.scss']\n})\nexport class ChallengesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export * from \"./challenges.component\"","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedModule } from \"../shared\";\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\nimport { RouterModule } from '@angular/router';\nimport { WriteOutJsonInterceptor } from \"./write-out-json-intercepter\";\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule,  RouterModule.forRoot([])\n  ],\n  declarations: [NotFoundComponent, UnauthorizedComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: WriteOutJsonInterceptor,\n      multi: true\n    },\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    },\n  ]\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule\n  ) {\n    // throwIfAlreadyLoaded(parentModule, \"CoreModule\");\n  }\n}\n","export * from \"./not-found\"\nexport * from \"./unauthorized\"\n\nexport * from \"./module-import.guard\"\nexport * from \"./logger.service\"\n\nexport * from \"./core.module\"","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  static log(msg: string): void {\n    console.log(msg);\n  }\n\n  static error(msg: string, obj = {}): void {\n    console.error(msg, obj);\n  }\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleImportGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n}\n\nexport function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n    if (parentModule) {\n      throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n    }\n  }","export * from \"./not-found.component\"","module.exports = \"  <!-- not-found works! -->\\n <h2>This page was not found</h2>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export * from  \"./unauthorized.component\"","module.exports = \" <h3>Unauthorized request</h3>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorized',\n  templateUrl: './unauthorized.component.html',\n  styleUrls: ['./unauthorized.component.scss']\n})\nexport class UnauthorizedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  // Define what to do when an unauthorized request was made\n\n}\n","import { HttpInterceptor } from \"@angular/common/http/src/interceptor\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n    HttpResponse\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map, tap } from 'rxjs/operators';\n\nexport class WriteOutJsonInterceptor implements HttpInterceptor {\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next\n      .handle(request)\n      .pipe(tap(data => console.log(JSON.stringify(data, null, \"\\t\"))))\n    };\n  }\n","export * from \"./shared\"\nexport * from \"./capture-the-flag\"\nexport * from \"./challenges\"\nexport * from \"./core\"","export * from \"./shared.module\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class UserService {\n\n  // http options used for making API calls\n  private httpOptions: any;\n\n  // the actual JWT token\n  public token: string;\n\n  // the token expiration date\n  public token_expires: Date;\n\n  // the username of the logged in user\n  public username: string;\n\n  // error messages received from the login attempt\n  public errors: any = [];\n\n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n  }\n\n  getHttpOptions(anonymous = true) {\n    if (anonymous) {\n      return {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        })\n      }\n    } else {\n      return {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'JWT ' + this.token\n        })\n      }\n    }\n  }\n\n  isLoggedIn() {\n    // check if user has token in session storage\n    let token = localStorage.getItem('token'); \n    if (token) {\n      // verify token to api\n      this.http.post('/api-token-verify/', {\"token\": token}, this.httpOptions).subscribe(\n        data => {\n          this.updateData(data['token']);\n        },\n        err => {\n          console.error('token verification error', err);\n        }\n      )\n    }\n\n  }\n\n  // Uses http.post() to get an auth token from djangorestframework-jwt endpoint\n  public login(user) {\n    this.http.post('/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\n      data => {\n        console.log('login success', data);\n        this.updateData(data['token']);\n      },\n      err => {\n        console.error('login error', err);\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  // Registers a new user\n  public register(userData) {\n    return this.http.post('/api/users', JSON.stringify(userData), this.getHttpOptions());\n  }\n\n\n  /**\n   * Refreshes the JWT token, to extend the time the user is logged in\n   */\n  public refreshToken() {\n    this.http.post('/api-token-refresh/', JSON.stringify({ token: this.token }), this.httpOptions).subscribe(\n      data => {\n        console.log('refresh success', data);\n        this.updateData(data['token']);\n      },\n      err => {\n        console.error('refresh error', err);\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  public logout() {\n    this.token = null;\n    this.token_expires = null;\n    this.username = null;\n  }\n\n  private updateData(token) {\n    this.token = token;\n    this.errors = [];\n    \n    // decode the token to read the username and expiration timestamp\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    this.username = token_decoded.username;\n    \n    // save token in the browser session\n    localStorage.setItem('token', token); \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}